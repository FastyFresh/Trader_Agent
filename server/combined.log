{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:35:46.289Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:37:06.928Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:52:34.994Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:53:02.086Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:53:36.868Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:54:08.006Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:54:43.332Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:55:58.725Z"}
{"level":"error","message":"Error fetching portfolio: Operation `portfolios.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `portfolios.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:614:17)\n    at process.processTimers (node:internal/timers:549:7)","timestamp":"2024-11-03T00:56:09.180Z"}
{"level":"error","message":"Error fetching portfolio: Operation `portfolios.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `portfolios.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:614:17)\n    at process.processTimers (node:internal/timers:549:7)","timestamp":"2024-11-03T00:56:09.181Z"}
{"level":"error","message":"Error calculating performance metrics: Operation `portfolios.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `portfolios.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:614:17)\n    at process.processTimers (node:internal/timers:549:7)","timestamp":"2024-11-03T00:56:09.187Z"}
{"level":"error","message":"Error fetching performance metrics: Operation `portfolios.findOne()` buffering timed out after 10000ms","stack":"MongooseError: Operation `portfolios.findOne()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:614:17)\n    at process.processTimers (node:internal/timers:549:7)","timestamp":"2024-11-03T00:56:09.188Z"}
{"level":"error","message":"Error fetching active trades: Operation `trades.find()` buffering timed out after 10000ms","stack":"MongooseError: Operation `trades.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:614:17)\n    at process.processTimers (node:internal/timers:549:7)","timestamp":"2024-11-03T00:56:09.190Z"}
{"level":"error","message":"Error fetching active trades: Operation `trades.find()` buffering timed out after 10000ms","stack":"MongooseError: Operation `trades.find()` buffering timed out after 10000ms\n    at Timeout.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:185:23)\n    at listOnTimeout (node:internal/timers:614:17)\n    at process.processTimers (node:internal/timers:549:7)","timestamp":"2024-11-03T00:56:09.190Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:56:12.154Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:58:47.070Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:58:49.470Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T00:59:19.706Z"}
{"buying_power":"199998.38","equity":"99999.19","level":"info","message":"Connected to Alpaca API:","status":"ACTIVE","timestamp":"2024-11-03T01:34:01.235Z"}
{"buyingPower":"199998.38","cash":"99999.19","equity":"99999.19","level":"info","message":"Account Status:","timestamp":"2024-11-03T01:34:01.588Z"}
{"level":"error","message":"Failed to get market data: code: 404, message: Not Found","stack":"Error: code: 404, message: Not Found\n    at /Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@alpacahq/alpaca-trade-api/dist/resources/datav2/rest_v2.js:72:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T01:34:01.952Z"}
{"level":"error","message":"Paper trading test failed: code: 404, message: Not Found","stack":"Error: code: 404, message: Not Found\n    at /Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@alpacahq/alpaca-trade-api/dist/resources/datav2/rest_v2.js:72:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T01:34:01.952Z"}
{"level":"info","message":"Alpaca service cleanup completed","timestamp":"2024-11-03T01:34:01.953Z"}
{"level":"info","message":"Connected to Alpaca WebSocket","timestamp":"2024-11-03T01:34:01.962Z"}
{"buying_power":"199998.38","equity":"99999.19","level":"info","message":"Connected to Alpaca API:","status":"ACTIVE","timestamp":"2024-11-03T01:35:34.008Z"}
{"buyingPower":"199998.38","cash":"99999.19","equity":"99999.19","level":"info","message":"Account Status:","timestamp":"2024-11-03T01:35:34.397Z"}
{"level":"info","message":"Recent BTC/USD prices:","timestamp":"2024-11-03T01:35:34.682Z"}
{"level":"error","message":"Paper trading test failed: Cannot read properties of undefined (reading 'close')","stack":"TypeError: Cannot read properties of undefined (reading 'close')\n    at testPaperTrading (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/paperTrade.js:22:64)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T01:35:34.683Z"}
{"level":"info","message":"Alpaca service cleanup completed","timestamp":"2024-11-03T01:35:34.684Z"}
{"level":"info","message":"Connected to Alpaca WebSocket","timestamp":"2024-11-03T01:35:34.685Z"}
{"buying_power":"199998.38","equity":"99999.19","level":"info","message":"Connected to Alpaca API:","status":"ACTIVE","timestamp":"2024-11-03T01:36:14.482Z"}
{"buyingPower":"199998.38","cash":"99999.19","equity":"99999.19","level":"info","message":"Account Status:","timestamp":"2024-11-03T01:36:14.712Z"}
{"level":"info","message":"Getting latest BTC quote...","timestamp":"2024-11-03T01:36:14.712Z"}
{"level":"info","message":"Connected to Alpaca WebSocket","timestamp":"2024-11-03T01:36:14.991Z"}
{"level":"error","message":"Paper trading test failed: code: 404, message: no quote found for BTCUSD","stack":"Error: code: 404, message: no quote found for BTCUSD\n    at /Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@alpacahq/alpaca-trade-api/dist/resources/datav2/rest_v2.js:72:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T01:36:14.996Z"}
{"level":"info","message":"Alpaca service cleanup completed","timestamp":"2024-11-03T01:36:14.998Z"}
{"level":"error","message":"Alpaca WebSocket error:","timestamp":"2024-11-03T01:36:15.064Z"}
{"level":"error","message":"Alpaca WebSocket error:","timestamp":"2024-11-03T01:36:15.067Z"}
{"buying_power":"199998.38","equity":"99999.19","level":"info","message":"Connected to Alpaca API:","status":"ACTIVE","timestamp":"2024-11-03T01:46:28.285Z"}
{"level":"info","message":"Positions updated:","timestamp":"2024-11-03T01:46:28.363Z"}
{"level":"info","message":"Orders updated:","timestamp":"2024-11-03T01:46:28.439Z"}
{"buyingPower":"199998.38","cash":"99999.19","daytradeCount":0,"equity":"99999.19","level":"info","message":"Account info retrieved:","status":"ACTIVE","timestamp":"2024-11-03T01:46:28.632Z"}
{"buyingPower":"199998.38","cash":"99999.19","equity":"99999.19","level":"info","message":"Account Status:","timestamp":"2024-11-03T01:46:28.632Z"}
{"level":"info","message":"Getting latest BTC quote...","timestamp":"2024-11-03T01:46:28.633Z"}
{"level":"info","message":"Connected to Alpaca WebSocket","timestamp":"2024-11-03T01:46:28.853Z"}
{"level":"info","message":"Subscribed to BTCUSD data stream","timestamp":"2024-11-03T01:46:28.856Z"}
{"level":"error","message":"Paper trading test failed: code: 404, message: no quote found for BTCUSD","stack":"Error: code: 404, message: no quote found for BTCUSD\n    at /Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@alpacahq/alpaca-trade-api/dist/resources/datav2/rest_v2.js:72:15\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T01:46:28.915Z"}
{"level":"info","message":"Alpaca service cleanup completed","timestamp":"2024-11-03T01:46:28.916Z"}
{"level":"error","message":"Alpaca WebSocket error:","timestamp":"2024-11-03T01:46:28.924Z"}
{"code":"ERR_HTTP_INVALID_HEADER_VALUE","level":"error","message":"API request failed: GET /accounts Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"","stack":"TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"\n    at ClientRequest.setHeader (node:_http_outgoing:702:3)\n    at new ClientRequest (node:_http_client:295:14)\n    at Object.request (node:https:381:10)\n    at RedirectableRequest._performRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:337:24)\n    at new RedirectableRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:111:8)\n    at Object.request (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:543:14)\n    at dispatchHttpRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:202:25)\n    at new Promise (<anonymous>)\n    at httpAdapter (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:46:10)\n    at dispatchRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/core/dispatchRequest.js:53:10)","timestamp":"2024-11-03T03:20:16.698Z"}
{"code":"ERR_HTTP_INVALID_HEADER_VALUE","level":"error","message":"Failed to initialize Coinbase service: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"","stack":"TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"\n    at ClientRequest.setHeader (node:_http_outgoing:702:3)\n    at new ClientRequest (node:_http_client:295:14)\n    at Object.request (node:https:381:10)\n    at RedirectableRequest._performRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:337:24)\n    at new RedirectableRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:111:8)\n    at Object.request (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:543:14)\n    at dispatchHttpRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:202:25)\n    at new Promise (<anonymous>)\n    at httpAdapter (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:46:10)\n    at dispatchRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/core/dispatchRequest.js:53:10)","timestamp":"2024-11-03T03:20:16.705Z"}
{"code":"ERR_HTTP_INVALID_HEADER_VALUE","level":"error","message":"Trading test failed: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"","stack":"TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"\n    at ClientRequest.setHeader (node:_http_outgoing:702:3)\n    at new ClientRequest (node:_http_client:295:14)\n    at Object.request (node:https:381:10)\n    at RedirectableRequest._performRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:337:24)\n    at new RedirectableRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:111:8)\n    at Object.request (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:543:14)\n    at dispatchHttpRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:202:25)\n    at new Promise (<anonymous>)\n    at httpAdapter (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:46:10)\n    at dispatchRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/core/dispatchRequest.js:53:10)","timestamp":"2024-11-03T03:20:16.705Z"}
{"level":"info","message":"Coinbase service cleanup completed","timestamp":"2024-11-03T03:20:16.706Z"}
{"code":"ERR_HTTP_INVALID_HEADER_VALUE","level":"error","message":"API request failed: GET /accounts Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"","stack":"TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"\n    at ClientRequest.setHeader (node:_http_outgoing:702:3)\n    at new ClientRequest (node:_http_client:295:14)\n    at Object.request (node:https:381:10)\n    at RedirectableRequest._performRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:337:24)\n    at new RedirectableRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:111:8)\n    at Object.request (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:543:14)\n    at dispatchHttpRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:202:25)\n    at new Promise (<anonymous>)\n    at httpAdapter (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:46:10)\n    at dispatchRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/core/dispatchRequest.js:53:10)","timestamp":"2024-11-03T03:22:18.712Z"}
{"code":"ERR_HTTP_INVALID_HEADER_VALUE","level":"error","message":"Failed to initialize Coinbase service: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"","stack":"TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"\n    at ClientRequest.setHeader (node:_http_outgoing:702:3)\n    at new ClientRequest (node:_http_client:295:14)\n    at Object.request (node:https:381:10)\n    at RedirectableRequest._performRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:337:24)\n    at new RedirectableRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:111:8)\n    at Object.request (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:543:14)\n    at dispatchHttpRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:202:25)\n    at new Promise (<anonymous>)\n    at httpAdapter (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:46:10)\n    at dispatchRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/core/dispatchRequest.js:53:10)","timestamp":"2024-11-03T03:22:18.720Z"}
{"code":"ERR_HTTP_INVALID_HEADER_VALUE","level":"error","message":"Trading test failed: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"","stack":"TypeError [ERR_HTTP_INVALID_HEADER_VALUE]: Invalid value \"undefined\" for header \"CB-ACCESS-KEY\"\n    at ClientRequest.setHeader (node:_http_outgoing:702:3)\n    at new ClientRequest (node:_http_client:295:14)\n    at Object.request (node:https:381:10)\n    at RedirectableRequest._performRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:337:24)\n    at new RedirectableRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:111:8)\n    at Object.request (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/follow-redirects/index.js:543:14)\n    at dispatchHttpRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:202:25)\n    at new Promise (<anonymous>)\n    at httpAdapter (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/adapters/http.js:46:10)\n    at dispatchRequest (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/axios/lib/core/dispatchRequest.js:53:10)","timestamp":"2024-11-03T03:22:18.720Z"}
{"level":"info","message":"Coinbase service cleanup completed","timestamp":"2024-11-03T03:22:18.721Z"}
{"level":"info","message":"Connected to Solana","timestamp":"2024-11-03T06:11:58.090Z"}
{"level":"info","message":"Wallet initialized:","publicKey":"7q9rLHwPNB1ZaERHLXQeDtgtspT8sRnfHh5eWqDJa2tV","timestamp":"2024-11-03T06:11:58.164Z"}
{"level":"info","message":"Wallet created:","publicKey":"7q9rLHwPNB1ZaERHLXQeDtgtspT8sRnfHh5eWqDJa2tV","timestamp":"2024-11-03T06:11:58.165Z"}
{"balance":"0 SOL","level":"info","message":"Initial balance:","timestamp":"2024-11-03T06:11:58.780Z"}
{"level":"info","message":"Exported wallet secret key","timestamp":"2024-11-03T06:11:58.780Z"}
{"level":"info","message":"Wallet cleanup completed","timestamp":"2024-11-03T06:11:58.781Z"}
{"level":"info","message":"Wallet loaded from secret key:","publicKey":"7q9rLHwPNB1ZaERHLXQeDtgtspT8sRnfHh5eWqDJa2tV","timestamp":"2024-11-03T06:11:58.782Z"}
{"level":"info","message":"Reloaded wallet from secret key:","publicKey":"7q9rLHwPNB1ZaERHLXQeDtgtspT8sRnfHh5eWqDJa2tV","timestamp":"2024-11-03T06:11:58.783Z"}
{"balance":"0 SOL","level":"info","message":"Final balance:","timestamp":"2024-11-03T06:11:58.890Z"}
{"level":"info","message":"Wallet test completed successfully","timestamp":"2024-11-03T06:11:58.891Z"}
{"level":"info","message":"Wallet cleanup completed","timestamp":"2024-11-03T06:11:58.892Z"}
{"level":"info","message":"Connected to Solana","timestamp":"2024-11-03T06:12:46.173Z"}
{"level":"info","message":"Wallet initialized:","publicKey":"E9SJ78r2APNMXQS1aytM8q8R4Q2Z9ehhtWhkVq1aN2CH","timestamp":"2024-11-03T06:12:46.263Z"}
{"level":"info","message":"Wallet created:","publicKey":"E9SJ78r2APNMXQS1aytM8q8R4Q2Z9ehhtWhkVq1aN2CH","timestamp":"2024-11-03T06:12:46.265Z"}
{"balance":"0 SOL","level":"info","message":"Initial balance:","timestamp":"2024-11-03T06:12:46.968Z"}
{"level":"info","message":"Exported wallet secret key","timestamp":"2024-11-03T06:12:46.970Z"}
{"level":"info","message":"Wallet cleanup completed","timestamp":"2024-11-03T06:12:46.971Z"}
{"level":"info","message":"Wallet loaded from secret key:","publicKey":"E9SJ78r2APNMXQS1aytM8q8R4Q2Z9ehhtWhkVq1aN2CH","timestamp":"2024-11-03T06:12:46.973Z"}
{"level":"info","message":"Reloaded wallet from secret key:","publicKey":"E9SJ78r2APNMXQS1aytM8q8R4Q2Z9ehhtWhkVq1aN2CH","timestamp":"2024-11-03T06:12:46.974Z"}
{"balance":"0 SOL","level":"info","message":"Final balance:","timestamp":"2024-11-03T06:12:47.084Z"}
{"level":"info","message":"Wallet test completed successfully","timestamp":"2024-11-03T06:12:47.084Z"}
{"level":"info","message":"Wallet cleanup completed","timestamp":"2024-11-03T06:12:47.085Z"}
{"level":"error","message":"Failed to initialize Drift service: Wallet implementation required","stack":"Error: Wallet implementation required\n    at DriftService.getWallet (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:49:15)\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:26:30)\n    at testDriftTrading (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftTrade.js:7:28)\n    at Object.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftTrade.js:95:5)\n    at Module._compile (node:internal/modules/cjs/loader:1572:14)\n    at Object..js (node:internal/modules/cjs/loader:1709:10)\n    at Module.load (node:internal/modules/cjs/loader:1315:32)\n    at Function._load (node:internal/modules/cjs/loader:1125:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:216:24)","timestamp":"2024-11-03T06:13:13.237Z"}
{"level":"error","message":"Trading test failed: Wallet implementation required","stack":"Error: Wallet implementation required\n    at DriftService.getWallet (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:49:15)\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:26:30)\n    at testDriftTrading (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftTrade.js:7:28)\n    at Object.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftTrade.js:95:5)\n    at Module._compile (node:internal/modules/cjs/loader:1572:14)\n    at Object..js (node:internal/modules/cjs/loader:1709:10)\n    at Module.load (node:internal/modules/cjs/loader:1315:32)\n    at Function._load (node:internal/modules/cjs/loader:1125:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:216:24)","timestamp":"2024-11-03T06:13:13.248Z"}
{"level":"info","message":"Drift service cleanup completed","timestamp":"2024-11-03T06:13:13.249Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T18:22:10.516Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T18:22:10.520Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T18:22:10.520Z"}
{"level":"error","message":"Failed to initialize Drift service: this.subscribeToMarketData is not a function","stack":"TypeError: this.subscribeToMarketData is not a function\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:31:24)\n    at startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:18:28)\n    at Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:34)\n    at Object.onceWrapper (node:events:621:28)\n    at Server.emit (node:events:519:35)\n    at emitListeningNT (node:net:1955:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)","timestamp":"2024-11-03T18:22:10.521Z"}
{"level":"error","message":"Error in research cycle: this.subscribeToMarketData is not a function","stack":"TypeError: this.subscribeToMarketData is not a function\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:31:24)\n    at startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:18:28)\n    at Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:34)\n    at Object.onceWrapper (node:events:621:28)\n    at Server.emit (node:events:519:35)\n    at emitListeningNT (node:net:1955:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)","timestamp":"2024-11-03T18:22:10.522Z"}
{"level":"error","message":"Failed to complete research cycle: this.subscribeToMarketData is not a function","stack":"TypeError: this.subscribeToMarketData is not a function\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:31:24)\n    at startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:18:28)\n    at Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:34)\n    at Object.onceWrapper (node:events:621:28)\n    at Server.emit (node:events:519:35)\n    at emitListeningNT (node:net:1955:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)","timestamp":"2024-11-03T18:22:10.522Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T18:23:12.555Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T18:23:12.559Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T18:23:12.559Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T18:23:12.560Z"}
{"level":"info","message":"Drift service initialized","timestamp":"2024-11-03T18:23:12.561Z"}
{"level":"error","message":"Error getting historical data for BTC-PERP: Market BTC-PERP not found","stack":"Error: Market BTC-PERP not found\n    at Object.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftsim.js:69:37)\n    at DriftService.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:38)\n    at MarketAnalysis.initializeMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:41:55)\n    at MarketAnalysis.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:25:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ResearchAgent.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/agents/ResearchAgent.js:28:13)\n    at async startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:22:9)\n    at async Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:28)","timestamp":"2024-11-03T18:23:12.562Z"}
{"level":"error","message":"Error initializing market data for BTC-PERP: Market BTC-PERP not found","stack":"Error: Market BTC-PERP not found\n    at Object.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftsim.js:69:37)\n    at DriftService.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:38)\n    at MarketAnalysis.initializeMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:41:55)\n    at MarketAnalysis.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:25:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ResearchAgent.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/agents/ResearchAgent.js:28:13)\n    at async startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:22:9)\n    at async Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:28)","timestamp":"2024-11-03T18:23:12.562Z"}
{"level":"error","message":"Failed to initialize market analysis: Market BTC-PERP not found","stack":"Error: Market BTC-PERP not found\n    at Object.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftsim.js:69:37)\n    at DriftService.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:38)\n    at MarketAnalysis.initializeMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:41:55)\n    at MarketAnalysis.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:25:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ResearchAgent.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/agents/ResearchAgent.js:28:13)\n    at async startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:22:9)\n    at async Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:28)","timestamp":"2024-11-03T18:23:12.563Z"}
{"level":"error","message":"Failed to initialize research agent: Market BTC-PERP not found","stack":"Error: Market BTC-PERP not found\n    at Object.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftsim.js:69:37)\n    at DriftService.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:38)\n    at MarketAnalysis.initializeMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:41:55)\n    at MarketAnalysis.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:25:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ResearchAgent.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/agents/ResearchAgent.js:28:13)\n    at async startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:22:9)\n    at async Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:28)","timestamp":"2024-11-03T18:23:12.563Z"}
{"level":"error","message":"Error in research cycle: Market BTC-PERP not found","stack":"Error: Market BTC-PERP not found\n    at Object.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftsim.js:69:37)\n    at DriftService.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:38)\n    at MarketAnalysis.initializeMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:41:55)\n    at MarketAnalysis.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:25:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ResearchAgent.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/agents/ResearchAgent.js:28:13)\n    at async startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:22:9)\n    at async Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:28)","timestamp":"2024-11-03T18:23:12.564Z"}
{"level":"error","message":"Failed to complete research cycle: Market BTC-PERP not found","stack":"Error: Market BTC-PERP not found\n    at Object.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/driftsim.js:69:37)\n    at DriftService.getHistoricalData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:38)\n    at MarketAnalysis.initializeMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:41:55)\n    at MarketAnalysis.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/MarketAnalysis.js:25:28)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ResearchAgent.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/agents/ResearchAgent.js:28:13)\n    at async startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:22:9)\n    at async Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:28)","timestamp":"2024-11-03T18:23:12.565Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T18:25:27.916Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T18:25:27.921Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T18:25:27.921Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T18:25:27.921Z"}
{"level":"info","message":"Drift service initialized","timestamp":"2024-11-03T18:25:27.922Z"}
{"level":"info","message":"Initialized market data for SOL-PERP","timestamp":"2024-11-03T18:25:27.923Z"}
{"level":"info","message":"Initialized market data for WBTC-PERP","timestamp":"2024-11-03T18:25:27.923Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T18:25:27.923Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T18:25:27.924Z"}
{"level":"info","message":"Required daily return:","timestamp":"2024-11-03T18:25:27.924Z"}
{"gridSpacing":null,"level":"info","leverageRange":{"default":null,"max":null,"min":1},"message":"Research parameters initialized:","momentumThreshold":null,"positionSizing":{"maxPositionSize":null,"riskPerTrade":null,"scalingFactor":null},"timeframes":[],"timestamp":"2024-11-03T18:25:27.926Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T18:25:27.926Z"}
{"level":"info","message":"Starting strategy research...","timestamp":"2024-11-03T18:25:27.927Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T18:25:27.927Z"}
{"level":"info","message":"Optimal strategies found:","timestamp":"2024-11-03T18:25:27.928Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T18:28:47.532Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T18:28:47.536Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T18:28:47.537Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T18:28:47.537Z"}
{"level":"info","message":"Drift service initialized","timestamp":"2024-11-03T18:28:47.537Z"}
{"level":"info","message":"Initialized market data for SOL-PERP","timestamp":"2024-11-03T18:28:47.538Z"}
{"level":"info","message":"Initialized market data for WBTC-PERP","timestamp":"2024-11-03T18:28:47.539Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T18:28:47.539Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T18:28:47.539Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T18:28:47.540Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T18:28:47.540Z"}
{"level":"info","message":"Required daily return to reach $1M:","timestamp":"2024-11-03T18:28:47.540Z"}
{"gridSpacing":null,"level":"info","leverageRange":{"default":null,"max":null,"min":1},"message":"Research parameters initialized:","momentumThreshold":null,"positionSizing":{"maxPositionSize":null,"riskPerTrade":null,"scalingFactor":null},"timeframes":[],"timestamp":"2024-11-03T18:28:47.541Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T18:28:47.541Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T18:28:47.542Z"}
{"level":"info","message":"Starting strategy research...","timestamp":"2024-11-03T18:28:47.542Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T18:28:47.542Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T18:28:47.542Z"}
{"level":"info","message":"Optimal strategies found:","timestamp":"2024-11-03T18:28:47.543Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T18:32:07.537Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T18:32:07.541Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T18:32:07.542Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T18:32:07.542Z"}
{"level":"info","message":"Drift service initialized","timestamp":"2024-11-03T18:32:07.542Z"}
{"level":"info","message":"Initialized market data for SOL-PERP","timestamp":"2024-11-03T18:32:07.543Z"}
{"level":"info","message":"Initialized market data for WBTC-PERP","timestamp":"2024-11-03T18:32:07.544Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T18:32:07.544Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T18:32:07.544Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T18:32:07.545Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T18:32:07.546Z"}
{"level":"info","message":"Required daily return to reach $1M:","timestamp":"2024-11-03T18:32:07.546Z"}
{"gridSpacing":null,"level":"info","leverageRange":{"default":null,"max":null,"min":1},"message":"Research parameters initialized:","momentumThreshold":null,"positionSizing":{"maxPositionSize":null,"riskPerTrade":null,"scalingFactor":null},"timeframes":[],"timestamp":"2024-11-03T18:32:07.547Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T18:32:07.547Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T18:32:07.548Z"}
{"level":"info","message":"Starting strategy research...","timestamp":"2024-11-03T18:32:07.548Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T18:32:07.548Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T18:32:07.548Z"}
{"level":"info","message":"Optimal strategies found:","timestamp":"2024-11-03T18:32:07.549Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T18:37:07.559Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T18:42:07.525Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T18:47:07.515Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T18:52:07.521Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T18:57:07.519Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:02:07.523Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:07:07.543Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:12:07.528Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:17:07.524Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:22:07.551Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:27:07.544Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:32:07.560Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:37:07.575Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:42:07.550Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T19:47:07.548Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T19:56:20.599Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T19:56:20.604Z"}
{"level":"error","message":"Failed to initialize Drift service: Connection is not defined","stack":"ReferenceError: Connection is not defined\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:21:37)\n    at startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:18:28)\n    at Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:34)\n    at Object.onceWrapper (node:events:621:28)\n    at Server.emit (node:events:519:35)\n    at emitListeningNT (node:net:1955:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)","timestamp":"2024-11-03T19:56:30.783Z"}
{"level":"error","message":"Error in research cycle: Connection is not defined","stack":"ReferenceError: Connection is not defined\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:21:37)\n    at startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:18:28)\n    at Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:34)\n    at Object.onceWrapper (node:events:621:28)\n    at Server.emit (node:events:519:35)\n    at emitListeningNT (node:net:1955:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)","timestamp":"2024-11-03T19:56:30.784Z"}
{"level":"error","message":"Failed to complete research cycle: Connection is not defined","stack":"ReferenceError: Connection is not defined\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:21:37)\n    at startResearch (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:18:28)\n    at Server.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:46:34)\n    at Object.onceWrapper (node:events:621:28)\n    at Server.emit (node:events:519:35)\n    at emitListeningNT (node:net:1955:10)\n    at process.processTicksAndRejections (node:internal/process/task_queues:89:21)","timestamp":"2024-11-03T19:56:30.785Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T19:58:26.466Z"}
{"level":"info","message":"CORS enabled for development ports 5173-5176","timestamp":"2024-11-03T19:58:26.473Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T19:58:26.474Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T19:58:26.474Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T19:58:26.474Z"}
{"level":"info","message":"Drift service initialized","timestamp":"2024-11-03T19:58:26.475Z"}
{"level":"info","message":"Initialized market data for SOL-PERP","timestamp":"2024-11-03T19:58:26.476Z"}
{"level":"info","message":"Initialized market data for WBTC-PERP","timestamp":"2024-11-03T19:58:26.476Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T19:58:26.476Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T19:58:26.477Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T19:58:26.477Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T19:58:26.477Z"}
{"level":"info","message":"Required daily return to reach $1M:","timestamp":"2024-11-03T19:58:26.478Z"}
{"gridSpacing":null,"level":"info","leverageRange":{"default":null,"max":null,"min":1},"message":"Research parameters initialized:","momentumThreshold":null,"positionSizing":{"maxPositionSize":null,"riskPerTrade":null,"scalingFactor":null},"timeframes":[],"timestamp":"2024-11-03T19:58:26.478Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T19:58:26.478Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T19:58:26.478Z"}
{"level":"info","message":"Starting strategy research...","timestamp":"2024-11-03T19:58:26.479Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T19:58:26.479Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T19:58:26.479Z"}
{"level":"info","message":"Optimal strategies found:","timestamp":"2024-11-03T19:58:26.480Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:03:26.493Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T20:12:23.512Z"}
{"level":"info","message":"CORS enabled for development ports 5173-5176","timestamp":"2024-11-03T20:12:23.517Z"}
{"level":"info","message":"Initializing research cycle...","timestamp":"2024-11-03T20:12:23.518Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T20:12:23.518Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T20:12:23.518Z"}
{"level":"info","message":"Drift service initialized","timestamp":"2024-11-03T20:12:23.519Z"}
{"level":"info","message":"Initialized market data for SOL-PERP","timestamp":"2024-11-03T20:12:23.520Z"}
{"level":"info","message":"Initialized market data for WBTC-PERP","timestamp":"2024-11-03T20:12:23.521Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T20:12:23.521Z"}
{"level":"info","message":"Market Analysis Service initialized","timestamp":"2024-11-03T20:12:23.522Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T20:12:23.522Z"}
{"level":"info","message":"Backtest Engine initialized","timestamp":"2024-11-03T20:12:23.522Z"}
{"level":"info","message":"Required daily return to reach $1M:","timestamp":"2024-11-03T20:12:23.523Z"}
{"gridSpacing":null,"level":"info","leverageRange":{"default":null,"max":null,"min":1},"message":"Research parameters initialized:","momentumThreshold":null,"positionSizing":{"maxPositionSize":null,"riskPerTrade":null,"scalingFactor":null},"timeframes":[],"timestamp":"2024-11-03T20:12:23.525Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T20:12:23.525Z"}
{"level":"info","message":"Research agent initialized","timestamp":"2024-11-03T20:12:23.525Z"}
{"level":"info","message":"Starting strategy research...","timestamp":"2024-11-03T20:12:23.525Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T20:12:23.525Z"}
{"level":"info","message":"Research cycle completed","timestamp":"2024-11-03T20:12:23.525Z"}
{"level":"info","message":"Optimal strategies found:","timestamp":"2024-11-03T20:12:23.526Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:17:23.528Z"}
{"level":"info","message":"All strategies stopped","timestamp":"2024-11-03T20:17:29.519Z"}
{"level":"info","message":"Momentum Strategy initialized for SOL-PERP","timestamp":"2024-11-03T20:17:29.520Z"}
{"level":"info","message":"Momentum strategy initialized for:","timestamp":"2024-11-03T20:17:29.520Z"}
{"level":"info","message":"Momentum Strategy initialized for SOL-PERP","timestamp":"2024-11-03T20:17:29.520Z"}
{"level":"info","message":"Momentum strategy initialized for:","timestamp":"2024-11-03T20:17:29.520Z"}
{"level":"info","message":"AutoTrader started in phase:","timestamp":"2024-11-03T20:17:29.520Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:21:53.120Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:21:56.821Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:22:23.531Z"}
{"level":"info","message":"Starting sample trade execution...","timestamp":"2024-11-03T20:22:45.989Z"}
{"level":"error","message":"Error getting market data for SOL-PERP: Cannot read properties of undefined (reading 'getMarketData')","stack":"TypeError: Cannot read properties of undefined (reading 'getMarketData')\n    at DriftService.getMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:54:38)\n    at executeSampleTrade (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/sampleTrade.js:9:47)\n    at Object.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/sampleTrade.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1572:14)\n    at Object..js (node:internal/modules/cjs/loader:1709:10)\n    at Module.load (node:internal/modules/cjs/loader:1315:32)\n    at Function._load (node:internal/modules/cjs/loader:1125:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:216:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:170:5)","timestamp":"2024-11-03T20:22:45.995Z"}
{"level":"error","message":"Error executing sample trade: Cannot read properties of undefined (reading 'getMarketData')","stack":"TypeError: Cannot read properties of undefined (reading 'getMarketData')\n    at DriftService.getMarketData (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:54:38)\n    at executeSampleTrade (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/sampleTrade.js:9:47)\n    at Object.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/src/test/sampleTrade.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1572:14)\n    at Object..js (node:internal/modules/cjs/loader:1709:10)\n    at Module.load (node:internal/modules/cjs/loader:1315:32)\n    at Function._load (node:internal/modules/cjs/loader:1125:12)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:216:24)\n    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:170:5)","timestamp":"2024-11-03T20:22:45.997Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:25:30.581Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:25:31.573Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:27:23.533Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:32:23.535Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:32:43.524Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:32:43.997Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:32:45.495Z"}
{"level":"warn","message":"AutoTrader is already running","timestamp":"2024-11-03T20:32:47.271Z"}
{"level":"error","message":"Failed to connect to MongoDB: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:791:11)\n    at async setupDatabase (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/database.js:12:9)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:112:9)","timestamp":"2024-11-03T20:36:40.010Z"}
{"level":"error","message":"Failed to connect to MongoDB: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:791:11)\n    at async setupDatabase (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/database.js:12:9)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:112:9)","timestamp":"2024-11-03T20:36:40.034Z"}
{"level":"error","message":"Failed to connect to MongoDB: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:791:11)\n    at async setupDatabase (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/database.js:12:9)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:112:9)","timestamp":"2024-11-03T20:36:40.060Z"}
{"level":"error","message":"Failed to connect to MongoDB: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017","reason":{"commonWireVersion":0,"compatible":true,"heartbeatFrequencyMS":10000,"localThresholdMS":15,"logicalSessionTimeoutMinutes":null,"maxElectionId":null,"maxSetVersion":null,"servers":{},"setName":null,"stale":false,"type":"Unknown"},"stack":"MongooseServerSelectionError: connect ECONNREFUSED ::1:27017, connect ECONNREFUSED 127.0.0.1:27017\n    at _handleConnectionErrors (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:816:11)\n    at NativeConnection.openUri (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongoose/lib/connection.js:791:11)\n    at async setupDatabase (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/database.js:12:9)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:112:9)","timestamp":"2024-11-03T20:36:40.063Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:37:23.539Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:40:03.293Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:40:03.827Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:40:03.833Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:41:34.511Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:41:34.516Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:41:34.528Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:41:34.534Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:41:34.538Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:41:34.578Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:41:34.589Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:41:34.604Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:41:34.617Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:41:34.623Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:41:34.643Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:41:34.689Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:41:34.694Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:41:34.697Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:41:34.702Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:42:01.448Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:42:01.473Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:42:01.478Z"}
{"level":"info","message":"Market analysis updated","timestamp":"2024-11-03T20:42:23.542Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.663Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:51.693Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:51.696Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.821Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.826Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.833Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.868Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.868Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:43:51.926Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:51.937Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:51.944Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:51.952Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:51.958Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:51.983Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:51.995Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:52.000Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:52.003Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:52.048Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:52.053Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:43:52.062Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:43:52.067Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.271Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.276Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.271Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.277Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.283Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.285Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.345Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.357Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.401Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.410Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.420Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:31.427Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.435Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.442Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.447Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.528Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.533Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.599Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.606Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:31.628Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:31.635Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:44:39.261Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:44:39.311Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:44:39.316Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:45:03.321Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:45:03.350Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:45:03.355Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T20:45:03.355Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T20:45:03.356Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T20:45:03.356Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T20:45:03.356Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T20:45:03.357Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T20:45:03.357Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T20:45:03.357Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T20:45:03.359Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T20:45:03.359Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T20:45:03.359Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:46:03.366Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:46:03.369Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:47:03.360Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:47:03.362Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:48:03.361Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:48:03.362Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:49:03.333Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:49:03.334Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:50:03.333Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:50:03.336Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:51:03.333Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:51:03.336Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:51:53.158Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:51:53.186Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:51:53.190Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:52:03.332Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:52:03.334Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T20:52:21.500Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:52:26.144Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:52:26.238Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:52:26.243Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T20:52:26.243Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T20:52:26.243Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T20:52:26.244Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T20:52:26.244Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T20:52:26.244Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T20:52:26.245Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T20:52:26.245Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T20:52:26.246Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T20:52:26.247Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T20:52:26.247Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:53:26.251Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:53:26.253Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:54:26.245Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:54:26.247Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:55:26.246Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:55:26.248Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:56:26.245Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:56:26.247Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:56:52.444Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:56:52.469Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:56:52.473Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T20:57:05.479Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T20:57:11.331Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T20:57:11.359Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T20:57:11.364Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T20:57:11.365Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T20:57:11.365Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T20:57:11.365Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T20:57:11.366Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T20:57:11.366Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T20:57:11.366Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T20:57:11.367Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T20:57:11.368Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T20:57:11.368Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T20:57:11.368Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:58:11.377Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:58:11.380Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:59:11.369Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T20:59:11.370Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:00:11.370Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:00:11.372Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:01:11.371Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:01:11.374Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:01:54.298Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:01:54.329Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:01:54.334Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:02:08.642Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:02:10.675Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:02:10.711Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:02:10.715Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:02:10.716Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:02:10.717Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:02:10.718Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:02:10.718Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:02:10.718Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:02:10.719Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:02:10.719Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:02:10.721Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:02:10.721Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:02:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:03:10.726Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:03:10.729Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:04:10.719Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:04:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:05:10.720Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:05:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:06:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:06:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:07:10.720Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:07:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:08:10.720Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:08:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:09:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:09:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:10:10.720Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:10:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:11:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:11:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:12:10.720Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:12:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:13:10.721Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:13:10.722Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:13:45.707Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:13:45.738Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:13:45.741Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:14:10.726Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:14:10.729Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:15:10.720Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:15:10.722Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:16:10.730Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:16:10.732Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:16:47.881Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:16:56.022Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:16:56.055Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:16:56.062Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:16:56.062Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:16:56.063Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:16:56.064Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:16:56.064Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:16:56.065Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:16:56.065Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:16:56.066Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:16:56.067Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:16:56.068Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:16:56.068Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:17:56.069Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:17:56.071Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:18:56.062Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:18:56.064Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:19:56.061Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:19:56.062Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:20:56.062Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:20:56.065Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:20:57.120Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:20:57.147Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:20:57.152Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:21:15.536Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:21:32.073Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:21:32.121Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:21:32.124Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:21:32.124Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:21:32.125Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:21:32.125Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:21:32.125Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:21:32.126Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:21:32.126Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:21:32.126Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:21:32.128Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:21:32.129Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:21:32.129Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:22:32.135Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:22:32.137Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:23:32.128Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:23:32.129Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:24:32.128Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:24:32.130Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:25:32.127Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:25:32.129Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:26:32.127Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:26:32.129Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:27:32.126Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:27:32.127Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:27:52.557Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:27:52.593Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:27:52.597Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:28:32.126Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:28:32.128Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:28:33.550Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:28:36.597Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:28:36.671Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:28:36.685Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:28:36.686Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:28:36.686Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:28:36.686Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:28:36.687Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:28:36.687Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:28:36.687Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:28:36.687Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:28:36.689Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:28:36.689Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:28:36.689Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:29:36.698Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:29:36.700Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:30:36.689Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:30:36.691Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:31:36.691Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:31:36.692Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.817Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.820Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.825Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.834Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.839Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.847Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.860Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.861Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.871Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.877Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.883Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.887Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.901Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.909Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.918Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.928Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.933Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.944Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.956Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.960Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:32:30.978Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.105Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.109Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.113Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:32:31.110Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:32:31.110Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:32:31.110Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:32:31.111Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:32:31.111Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:32:31.112Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:32:31.112Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:32:31.114Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:32:31.114Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:32:31.115Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.118Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.121Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.126Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.128Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.138Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.140Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.150Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.153Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.164Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.188Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.193Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.202Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.206Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.210Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.217Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.217Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.226Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.255Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.262Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.272Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.277Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.280Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.284Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.296Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.306Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.309Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.315Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.333Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.341Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.361Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.372Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.377Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.385Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.396Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.407Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.407Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.413Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:32:31.436Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:32:31.442Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:33:13.889Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:33:13.922Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:33:13.928Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:33:31.122Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:33:31.124Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:34:31.115Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:34:31.118Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:35:00.575Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:35:10.913Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:35:11.109Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:35:11.185Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:35:11.185Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:35:11.186Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:35:11.188Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:35:11.188Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:35:11.189Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:35:11.191Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:35:11.192Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:35:11.194Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:35:11.196Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:35:11.197Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:36:11.205Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:36:11.209Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:36:33.188Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:36:33.217Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:36:33.227Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:37:13.050Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:37:13.092Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:37:13.097Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:37:13.098Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:37:13.098Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:37:13.098Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:37:13.099Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:37:13.099Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:37:13.099Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:37:13.100Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:37:13.101Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:37:13.101Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:37:13.101Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:06.789Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:06.901Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:06.961Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:08.292Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:08.662Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.051Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.077Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:09.097Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.107Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.120Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.147Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:09.161Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:38:09.162Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:38:09.162Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:38:09.163Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:38:09.163Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:38:09.163Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:38:09.164Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:38:09.164Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:38:09.166Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:38:09.166Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:38:09.166Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.181Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.223Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.248Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.261Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.278Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.370Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.417Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.453Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.484Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.500Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.534Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.572Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.612Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.635Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:09.727Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:09.798Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:09.845Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:09.861Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:09.909Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.614Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.634Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.636Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.643Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.646Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.670Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.672Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.687Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.707Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.716Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.718Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.734Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.757Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.763Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.773Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.839Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:10.841Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:10.905Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.004Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.021Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.038Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.044Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.047Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.049Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.052Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.065Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.086Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.085Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.096Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.105Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.126Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.157Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.209Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.217Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.222Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.240Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.240Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.250Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.263Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.265Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.310Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.316Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:11.323Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:11.332Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.291Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.347Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.483Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.544Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.638Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:58.664Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.707Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:58.725Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:38:58.728Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:38:58.729Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:38:58.729Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:38:58.730Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:38:58.730Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:38:58.730Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:38:58.731Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:38:58.732Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:38:58.733Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:38:58.733Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:58.734Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.751Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.768Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:58.784Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:58.797Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:58.955Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:58.984Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:59.019Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:59.039Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:59.045Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:59.102Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:59.241Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:59.256Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:59.343Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:59.366Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:38:59.717Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:38:59.787Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:38:59.848Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:00.075Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:00.095Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:00.156Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:00.478Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:00.709Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:00.912Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:00.974Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.279Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.308Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.316Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.328Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.371Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.454Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.459Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.494Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:39:01.495Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.501Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.589Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.599Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.656Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.664Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.668Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.690Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.788Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.796Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.806Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.822Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.861Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.867Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.889Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.891Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.908Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.921Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.931Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:01.961Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.962Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:01.985Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:02.011Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:02.019Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:02.068Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:02.073Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:02.084Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:02.095Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:02.100Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:02.107Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:02.165Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:02.173Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:39:02.187Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:39:02.202Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:39:58.749Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:39:58.754Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:40:58.735Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:40:58.738Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:41:58.740Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:41:58.744Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:41:59.125Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:41:59.156Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:41:59.162Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:42:36.957Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:42:38.955Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:42:38.982Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:42:38.986Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:42:38.986Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:42:38.987Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:42:38.987Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:42:38.987Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:42:38.988Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:42:38.988Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:42:38.988Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:42:38.990Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:42:38.990Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:42:38.990Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:43:38.996Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:43:38.999Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:44:38.988Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:44:38.990Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:45:38.988Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:45:38.989Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.432Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.433Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.465Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.470Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.490Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.503Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.508Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.510Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.522Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.538Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.542Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.547Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.555Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.565Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.571Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.590Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.592Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.595Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.598Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.620Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.623Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.628Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.640Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.650Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.654Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.661Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:11.768Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:12.864Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:12.908Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:46:12.909Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:46:12.910Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:46:12.910Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:46:12.910Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:46:12.911Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:46:12.911Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:46:12.912Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:46:12.913Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:46:12.913Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:46:12.913Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.024Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.050Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.074Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.081Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.095Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.111Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.115Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.138Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.156Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.177Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.310Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.324Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.330Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.339Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.357Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.363Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.374Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.409Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.433Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.441Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.447Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.480Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.484Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.488Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.498Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.498Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.534Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.545Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.555Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.578Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.611Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.634Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.634Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.655Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.658Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.660Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.673Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.692Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.698Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.707Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.716Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.725Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.728Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.735Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.745Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.757Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.761Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.777Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.785Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:13.790Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.790Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:13.794Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:46:31.368Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:46:40.629Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:46:40.657Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:46:40.660Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:46:40.660Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:46:40.661Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:46:40.661Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:46:40.661Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:46:40.662Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:46:40.662Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:46:40.662Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:46:40.664Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:46:40.664Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:46:40.664Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:47:40.673Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:47:40.675Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:48:40.666Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:48:40.668Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:49:40.726Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:49:40.728Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:50:01.304Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:50:01.333Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:50:01.338Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T21:50:25.543Z"}
{"level":"info","message":"Server shut down successfully","timestamp":"2024-11-03T21:50:25.581Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:50:31.425Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:50:31.479Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:50:31.493Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T21:50:31.494Z"}
{"level":"info","message":"Initialized with simulated Drift Protocol data","timestamp":"2024-11-03T21:50:31.495Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T21:50:31.495Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T21:50:31.496Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T21:50:31.496Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T21:50:31.497Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T21:50:31.498Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T21:50:31.500Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T21:50:31.500Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T21:50:31.500Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:51:31.507Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:51:31.509Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:52:31.504Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:52:31.514Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:53:31.508Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:53:31.511Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:54:31.505Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:54:31.506Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:55:31.508Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:55:31.510Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:56:31.508Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T21:56:31.509Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.790Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.791Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.796Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.807Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.823Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.827Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.830Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.839Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.853Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.860Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.865Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.864Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.879Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.912Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.915Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.918Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.923Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.938Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.941Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.947Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.949Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.964Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.976Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.980Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:34.994Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:35.006Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:35.035Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:35.040Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:35.058Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T21:57:35.065Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.333Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.395Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.406Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.420Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.435Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.447Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.467Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.468Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.480Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.482Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.494Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.496Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.513Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.515Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.525Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.529Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.545Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.557Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.570Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.576Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.585Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.637Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.667Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.697Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.729Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:36.760Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:36.997Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.017Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.030Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.043Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.056Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.058Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.069Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.079Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.092Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.104Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.117Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.130Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.188Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.200Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.250Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.262Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.484Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.496Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.509Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.524Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.536Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.546Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.551Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.558Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.568Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.570Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.586Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.598Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.613Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.629Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.865Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T21:57:37.873Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.933Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T21:57:37.937Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.347Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.345Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.366Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.372Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.374Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.382Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.394Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.397Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.409Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.424Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.452Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.467Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.481Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.494Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.514Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.529Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.559Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.577Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.583Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.594Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.627Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.636Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.657Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.699Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.715Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.761Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.783Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.816Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.865Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.912Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:04:29.954Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.260Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.260Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.277Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.277Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.298Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.308Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.324Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.345Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.354Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.363Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.369Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.384Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.391Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.404Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.407Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.421Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.424Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.452Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.468Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.484Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.567Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.578Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.593Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.608Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.623Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.628Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.639Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.639Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.651Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.654Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.664Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.670Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.679Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.684Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.703Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.712Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.724Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.741Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.764Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.803Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.826Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.865Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.908Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.924Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.952Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.966Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.968Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.979Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:31.985Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:31.992Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:32.007Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.017Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:32.024Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.028Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.040Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:32.042Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.053Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.068Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.085Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.104Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:04:32.192Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:04:32.255Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:05:41.866Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:05:41.893Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:05:41.898Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:05:41.899Z"}
{"level":"error","message":"Failed to initialize Drift service: 410 Gone:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 410, \"message\":\"The RPC call or parameters have been disabled\"}, \"id\": \"c3d9b1dc-53f0-4889-b8cc-35e9377c67ea\" } \r\n","stack":"Error: 410 Gone:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 410, \"message\":\"The RPC call or parameters have been disabled\"}, \"id\": \"c3d9b1dc-53f0-4889-b8cc-35e9377c67ea\" } \r\n\n    at ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5091:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T22:05:43.216Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:06:59.604Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:06:59.642Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:06:59.649Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:06:59.650Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:06:59.650Z"}
{"level":"info","message":"Connecting to Solana devnet...","timestamp":"2024-11-03T22:06:59.651Z"}
{"level":"info","message":"Wallet created","timestamp":"2024-11-03T22:06:59.738Z"}
{"level":"error","message":"Error during Drift initialization: Cannot read properties of undefined (reading 'DEVNET')","stack":"TypeError: Cannot read properties of undefined (reading 'DEVNET')\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:51:78)\n    at MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:37)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T22:06:59.738Z"}
{"level":"error","message":"Failed to initialize Drift service: Cannot read properties of undefined (reading 'DEVNET')","stack":"TypeError: Cannot read properties of undefined (reading 'DEVNET')\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:51:78)\n    at MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:37)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T22:06:59.739Z"}
{"level":"info","message":"Initializing simulated Drift environment","timestamp":"2024-11-03T22:06:59.739Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T22:06:59.740Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T22:06:59.740Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T22:06:59.740Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T22:06:59.740Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T22:06:59.741Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T22:06:59.741Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T22:06:59.741Z"}
{"level":"info","message":"Shutting down server...","timestamp":"2024-11-03T22:07:04.399Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:07:06.913Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:07:06.940Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:07:06.943Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:07:06.944Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:07:06.944Z"}
{"level":"info","message":"Connecting to Solana devnet...","timestamp":"2024-11-03T22:07:06.945Z"}
{"level":"info","message":"Wallet created","timestamp":"2024-11-03T22:07:07.018Z"}
{"level":"error","message":"Error during Drift initialization: Cannot read properties of undefined (reading 'DEVNET')","stack":"TypeError: Cannot read properties of undefined (reading 'DEVNET')\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:51:78)\n    at MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:37)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T22:07:07.019Z"}
{"level":"error","message":"Failed to initialize Drift service: Cannot read properties of undefined (reading 'DEVNET')","stack":"TypeError: Cannot read properties of undefined (reading 'DEVNET')\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:51:78)\n    at MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:37)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:29)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-03T22:07:07.020Z"}
{"level":"info","message":"Initializing simulated Drift environment","timestamp":"2024-11-03T22:07:07.021Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T22:07:07.024Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T22:07:07.025Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T22:07:07.025Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T22:07:07.025Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T22:07:07.029Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T22:07:07.029Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T22:07:07.030Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:08:07.036Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:08:07.038Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:09:07.029Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:09:07.031Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:10:07.032Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:10:07.033Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:11:07.034Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:11:07.036Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:12:51.331Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:12:51.333Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:12:51.362Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:12:51.370Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:12:51.371Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:12:51.375Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:12:51.370Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:12:51.371Z"}
{"level":"info","message":"Attempting to connect via https://us-proxy.drift.trade...","timestamp":"2024-11-03T22:12:51.371Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:12:51.376Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:12:51.376Z"}
{"level":"info","message":"Attempting to connect via https://us-proxy.drift.trade...","timestamp":"2024-11-03T22:12:51.377Z"}
{"level":"warn","message":"Failed to connect via https://us-proxy.drift.trade:","timestamp":"2024-11-03T22:12:51.741Z"}
{"level":"warn","message":"Failed to connect via https://us-proxy.drift.trade:","timestamp":"2024-11-03T22:12:51.741Z"}
{"level":"info","message":"Attempting to connect via https://proxy.drift.trade...","timestamp":"2024-11-03T22:12:51.741Z"}
{"level":"info","message":"Attempting to connect via https://proxy.drift.trade...","timestamp":"2024-11-03T22:12:51.741Z"}
{"level":"warn","message":"Failed to connect via https://proxy.drift.trade:","timestamp":"2024-11-03T22:12:51.996Z"}
{"level":"warn","message":"Failed to connect via https://proxy.drift.trade:","timestamp":"2024-11-03T22:12:51.996Z"}
{"level":"info","message":"Attempting to connect via https://drift-proxy.herokuapp.com...","timestamp":"2024-11-03T22:12:51.996Z"}
{"level":"info","message":"Attempting to connect via https://drift-proxy.herokuapp.com...","timestamp":"2024-11-03T22:12:51.996Z"}
{"level":"warn","message":"Failed to connect via https://drift-proxy.herokuapp.com:","timestamp":"2024-11-03T22:12:53.154Z"}
{"level":"warn","message":"Failed to connect via https://drift-proxy.herokuapp.com:","timestamp":"2024-11-03T22:12:53.155Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:12:59.032Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:12:59.058Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:12:59.061Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:12:59.062Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:12:59.062Z"}
{"level":"info","message":"Attempting to connect via https://us-proxy.drift.trade...","timestamp":"2024-11-03T22:12:59.062Z"}
{"level":"warn","message":"Failed to connect via https://us-proxy.drift.trade:","timestamp":"2024-11-03T22:12:59.253Z"}
{"level":"info","message":"Attempting to connect via https://proxy.drift.trade...","timestamp":"2024-11-03T22:12:59.254Z"}
{"level":"warn","message":"Failed to connect via https://proxy.drift.trade:","timestamp":"2024-11-03T22:12:59.286Z"}
{"level":"info","message":"Attempting to connect via https://drift-proxy.herokuapp.com...","timestamp":"2024-11-03T22:12:59.287Z"}
{"level":"warn","message":"Failed to connect via https://drift-proxy.herokuapp.com:","timestamp":"2024-11-03T22:13:01.203Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:14:40.202Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:14:40.234Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:14:40.239Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:14:40.240Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:14:40.241Z"}
{"level":"info","message":"Connecting to Drift custom endpoint...","timestamp":"2024-11-03T22:14:40.241Z"}
{"cause":{"code":"ENOTFOUND","errno":-3008,"hostname":"api.drift.trade","syscall":"getaddrinfo"},"level":"error","message":"Error during Drift initialization: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:14:40.543Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:14:48.093Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:14:48.123Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:14:48.127Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:14:48.128Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:14:48.128Z"}
{"level":"info","message":"Connecting to Drift custom endpoint...","timestamp":"2024-11-03T22:14:48.129Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:16:28.728Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:16:28.755Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:16:28.758Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:16:28.758Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:16:28.759Z"}
{"level":"info","message":"Attempt 1 to connect to Solana...","timestamp":"2024-11-03T22:16:28.759Z"}
{"level":"warn","message":"Connection attempt 1 failed, retrying...","timestamp":"2024-11-03T22:16:29.531Z"}
{"level":"info","message":"Attempt 2 to connect to Solana...","timestamp":"2024-11-03T22:16:30.532Z"}
{"level":"warn","message":"Connection attempt 2 failed, retrying...","timestamp":"2024-11-03T22:16:30.797Z"}
{"level":"info","message":"Attempt 3 to connect to Solana...","timestamp":"2024-11-03T22:16:32.799Z"}
{"level":"error","message":"Failed to establish connection: failed to get recent blockhash: Error: 401 Unauthorized: {\"jsonrpc\":\"2.0\",\"id\":\"a738b5d9-343b-4445-baa4-4c53d151bba8\",\"error\":{\"code\":-32600,\"message\":\"Must be authenticated!\"}}","stack":"Error: failed to get recent blockhash: Error: 401 Unauthorized: {\"jsonrpc\":\"2.0\",\"id\":\"a738b5d9-343b-4445-baa4-4c53d151bba8\",\"error\":{\"code\":-32600,\"message\":\"Must be authenticated!\"}}\n    at Connection.getLatestBlockhash (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:7243:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:51:25)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-03T22:16:33.072Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:16:38.366Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:16:38.395Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:16:38.399Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:16:38.399Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:16:38.400Z"}
{"level":"info","message":"Attempt 1 to connect to Solana...","timestamp":"2024-11-03T22:16:38.400Z"}
{"level":"warn","message":"Connection attempt 1 failed, retrying...","timestamp":"2024-11-03T22:16:39.020Z"}
{"level":"info","message":"Attempt 2 to connect to Solana...","timestamp":"2024-11-03T22:16:40.021Z"}
{"level":"warn","message":"Connection attempt 2 failed, retrying...","timestamp":"2024-11-03T22:16:40.297Z"}
{"level":"info","message":"Attempt 3 to connect to Solana...","timestamp":"2024-11-03T22:16:42.298Z"}
{"level":"error","message":"Failed to establish connection: failed to get recent blockhash: Error: 401 Unauthorized: {\"jsonrpc\":\"2.0\",\"id\":\"3d053b3a-fef0-4c0b-b940-abf2fc484096\",\"error\":{\"code\":-32600,\"message\":\"Must be authenticated!\"}}","stack":"Error: failed to get recent blockhash: Error: 401 Unauthorized: {\"jsonrpc\":\"2.0\",\"id\":\"3d053b3a-fef0-4c0b-b940-abf2fc484096\",\"error\":{\"code\":-32600,\"message\":\"Must be authenticated!\"}}\n    at Connection.getLatestBlockhash (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:7243:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:51:25)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-03T22:16:42.576Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:19:20.668Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:19:20.684Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:19:20.708Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:19:20.714Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:19:20.716Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:19:20.723Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:19:20.714Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:19:20.715Z"}
{"level":"info","message":"Connecting to Solana...","timestamp":"2024-11-03T22:19:20.715Z"}
{"level":"info","message":"Creating wallet...","timestamp":"2024-11-03T22:19:20.719Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-03T22:19:20.791Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-03T22:19:20.791Z"}
{"level":"info","message":"Subscribing to updates...","timestamp":"2024-11-03T22:19:20.831Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:19:20.723Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:19:20.724Z"}
{"level":"info","message":"Connecting to Solana...","timestamp":"2024-11-03T22:19:20.725Z"}
{"level":"info","message":"Creating wallet...","timestamp":"2024-11-03T22:19:20.727Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-03T22:19:20.793Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-03T22:19:20.793Z"}
{"level":"info","message":"Subscribing to updates...","timestamp":"2024-11-03T22:19:20.833Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Error initializing Drift SDK/Client: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:19:31.369Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Error initializing Drift SDK/Client: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:19:31.371Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Error establishing connection: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:19:31.370Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Fatal error during initialization: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:19:31.370Z"}
{"level":"warn","message":"Fatal error encountered, falling back to simulation mode","timestamp":"2024-11-03T22:19:31.370Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-03T22:19:31.370Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T22:19:31.370Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T22:19:31.371Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T22:19:31.371Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T22:19:31.371Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T22:19:31.372Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T22:19:31.373Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T22:19:31.373Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:19:36.434Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:19:36.463Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:19:36.467Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:19:36.467Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:19:36.468Z"}
{"level":"info","message":"Connecting to Solana...","timestamp":"2024-11-03T22:19:36.468Z"}
{"level":"info","message":"Creating wallet...","timestamp":"2024-11-03T22:19:36.470Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-03T22:19:36.538Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-03T22:19:36.538Z"}
{"level":"info","message":"Subscribing to updates...","timestamp":"2024-11-03T22:19:36.723Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Error initializing Drift SDK/Client: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:19:47.282Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:20:15.851Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:20:15.874Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:20:15.877Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:20:15.878Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:20:15.878Z"}
{"level":"info","message":"Connecting to Solana...","timestamp":"2024-11-03T22:20:15.879Z"}
{"level":"info","message":"Creating wallet...","timestamp":"2024-11-03T22:20:15.880Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-03T22:20:15.951Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-03T22:20:15.952Z"}
{"level":"info","message":"Subscribing to updates...","timestamp":"2024-11-03T22:20:16.061Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Error initializing Drift SDK/Client: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:20:26.612Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Error establishing connection: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:20:26.612Z"}
{"cause":{"code":"UND_ERR_CONNECT_TIMEOUT","name":"ConnectTimeoutError"},"level":"error","message":"Fatal error during initialization: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at runNextTicks (node:internal/process/task_queues:69:3)\n    at process.processImmediate (node:internal/timers:479:9)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-03T22:20:26.612Z"}
{"level":"warn","message":"Fatal error encountered, falling back to simulation mode","timestamp":"2024-11-03T22:20:26.612Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-03T22:20:26.613Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T22:20:26.613Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T22:20:26.613Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T22:20:26.613Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T22:20:26.613Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T22:20:26.615Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T22:20:26.615Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T22:20:26.615Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:21:26.624Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:21:26.627Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:22:26.617Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:22:26.619Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:23:26.620Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:23:26.622Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:24:26.622Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:24:26.623Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:25:26.622Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:25:26.624Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:26:26.624Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:26:26.625Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:26:59.900Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:26:59.935Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:26:59.940Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:26:59.940Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:26:59.941Z"}
{"level":"info","message":"Connecting to Solana...","timestamp":"2024-11-03T22:26:59.941Z"}
{"level":"info","message":"Creating wallet...","timestamp":"2024-11-03T22:26:59.943Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-03T22:27:00.015Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-03T22:27:00.016Z"}
{"level":"info","message":"Subscribing to updates...","timestamp":"2024-11-03T22:27:00.093Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T22:27:02.890Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:27:29.381Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:27:29.409Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:27:29.414Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-03T22:27:29.414Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-03T22:27:29.415Z"}
{"level":"info","message":"Connecting to Solana...","timestamp":"2024-11-03T22:27:29.415Z"}
{"level":"info","message":"Creating wallet...","timestamp":"2024-11-03T22:27:29.417Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-03T22:27:29.490Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-03T22:27:29.491Z"}
{"level":"info","message":"Subscribing to updates...","timestamp":"2024-11-03T22:27:29.526Z"}
{"level":"info","message":"Drift service initialized successfully","timestamp":"2024-11-03T22:27:31.544Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-03T22:27:31.544Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-03T22:27:31.544Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-03T22:27:31.544Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-03T22:27:31.544Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-03T22:27:31.546Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-03T22:27:31.546Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-03T22:27:31.546Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:28:31.556Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:28:31.558Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:29:31.549Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:29:31.551Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:30:31.556Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:30:31.559Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:31:31.552Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:31:31.555Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:32:31.554Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:32:31.555Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:33:31.188Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:33:31.189Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:35:05.005Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-03T22:35:05.007Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:32.612Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:32.615Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:32.629Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:32.630Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:32.644Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:32.654Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:32.743Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:32.747Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:32.750Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:32.754Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:32.757Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:32.770Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:32.775Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:32.780Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:32.787Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:32.815Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:32.852Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:32.867Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:39.065Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:39.081Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:39.103Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:39.107Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:39.118Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:39.124Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:39.229Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:39.236Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:39.269Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:39.274Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:39.315Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:35:39.335Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:39.379Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:39.388Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:35:39.390Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:39.393Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:39.397Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:35:39.396Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-03T22:38:51.913Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-03T22:38:51.940Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-03T22:38:51.943Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T02:56:03.314Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T02:56:03.341Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T02:56:03.345Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T02:57:06.999Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T02:57:07.027Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T02:57:07.032Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T02:57:07.033Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T02:57:07.033Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T02:57:07.034Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T02:57:07.105Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T02:57:07.106Z"}
{"level":"info","message":"Testing connection...","timestamp":"2024-11-04T02:57:07.107Z"}
{"blockHeight":325800489,"level":"info","message":"Connected to Solana network","timestamp":"2024-11-04T02:57:08.211Z"}
{"level":"info","message":"Requesting devnet SOL airdrop...","timestamp":"2024-11-04T02:57:08.211Z"}
{"code":-32603,"level":"warn","message":"Airdrop failed, continuing anyway: airdrop to vz8cd54xDhjNb6TV8KN8No99v2Q5m12A8sAiu8FksHP failed: Internal error","name":"SolanaJSONRPCError","stack":"SolanaJSONRPCError: airdrop to vz8cd54xDhjNb6TV8KN8No99v2Q5m12A8sAiu8FksHP failed: Internal error\n    at Connection.requestAirdrop (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:7914:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:63:50)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-04T02:57:08.588Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-04T02:57:08.589Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-04T02:57:08.589Z"}
{"level":"info","message":"Drift client subscribed to updates","timestamp":"2024-11-04T02:57:10.592Z"}
{"level":"warn","message":"Market data not available yet: this.client.getPerpMarket is not a function","stack":"TypeError: this.client.getPerpMarket is not a function\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:107:54)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-04T02:57:10.592Z"}
{"level":"info","message":"Drift service initialization complete","timestamp":"2024-11-04T02:57:10.592Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T02:57:10.592Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T02:57:10.592Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-04T02:57:10.593Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T02:57:10.593Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T02:57:10.594Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T02:57:10.594Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T02:57:10.594Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T02:57:36.267Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T02:57:36.295Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T02:57:36.298Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T02:57:36.299Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T02:57:36.299Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T02:57:36.300Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T02:57:36.371Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T02:57:36.371Z"}
{"level":"info","message":"Testing connection...","timestamp":"2024-11-04T02:57:36.373Z"}
{"blockHeight":325800566,"level":"info","message":"Connected to Solana network","timestamp":"2024-11-04T02:57:37.100Z"}
{"level":"info","message":"Requesting devnet SOL airdrop...","timestamp":"2024-11-04T02:57:37.100Z"}
{"level":"warn","message":"Airdrop failed, continuing anyway: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"18ed8901-51b9-4bac-9f59-9055062dffb6\" } \r\n","stack":"Error: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"18ed8901-51b9-4bac-9f59-9055062dffb6\" } \r\n\n    at ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5091:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-04T02:57:47.693Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-04T02:57:47.693Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-04T02:57:47.694Z"}
{"level":"info","message":"Drift client subscribed to updates","timestamp":"2024-11-04T02:57:49.918Z"}
{"level":"warn","message":"Market data not available yet: this.client.getPerpMarket is not a function","stack":"TypeError: this.client.getPerpMarket is not a function\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:107:54)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-04T02:57:49.918Z"}
{"level":"info","message":"Drift service initialization complete","timestamp":"2024-11-04T02:57:49.918Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T02:57:49.919Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T02:57:49.919Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-04T02:57:49.919Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T02:57:49.919Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T02:57:49.920Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T02:57:49.920Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T02:57:49.920Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T02:58:49.927Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T02:58:49.929Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T02:59:49.924Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T02:59:49.925Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:00:49.924Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:00:49.925Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:01:49.927Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:01:49.928Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:02:49.930Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:02:49.931Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:03:49.931Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:03:49.932Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T03:05:07.981Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T03:05:08.012Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T03:05:08.015Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T03:05:08.015Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:05:08.016Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T03:05:08.016Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T03:05:08.086Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T03:05:08.087Z"}
{"level":"info","message":"Testing connection...","timestamp":"2024-11-04T03:05:08.089Z"}
{"blockHeight":325801757,"level":"info","message":"Connected to Solana network","timestamp":"2024-11-04T03:05:08.968Z"}
{"level":"info","message":"Requesting devnet SOL airdrop...","timestamp":"2024-11-04T03:05:08.968Z"}
{"level":"warn","message":"Airdrop failed, continuing anyway: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"758a6036-6656-4813-bdfa-930a52fd4270\" } \r\n","stack":"Error: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"758a6036-6656-4813-bdfa-930a52fd4270\" } \r\n\n    at ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5091:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-04T03:05:19.403Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-04T03:05:19.403Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-04T03:05:19.404Z"}
{"level":"info","message":"Drift client subscribed to updates","timestamp":"2024-11-04T03:05:21.704Z"}
{"level":"warn","message":"Market data not immediately available: PerpMarkets.load is not a function","stack":"TypeError: PerpMarkets.load is not a function\n    at DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:157:55)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-04T03:05:21.704Z"}
{"level":"info","message":"Drift service initialization complete","timestamp":"2024-11-04T03:05:21.704Z"}
{"blockHeight":325801790,"level":"info","message":"Solana connection test passed","timestamp":"2024-11-04T03:05:21.931Z"}
{"level":"info","message":"Drift subscription test","status":true,"timestamp":"2024-11-04T03:05:21.931Z"}
{"level":"warn","message":"Market data test failed PerpMarkets.load is not a function","stack":"TypeError: PerpMarkets.load is not a function\n    at DriftService.testConnection (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:36:51)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:174:17)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/market.js:15:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/index.js:157:9)","timestamp":"2024-11-04T03:05:21.932Z"}
{"balance":"0 SOL","level":"info","message":"Wallet test passed","publicKey":"vz8cd54xDhjNb6TV8KN8No99v2Q5m12A8sAiu8FksHP","timestamp":"2024-11-04T03:05:22.158Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:05:22.159Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:05:22.159Z"}
{"level":"info","message":"Strategy Manager initialized successfully","timestamp":"2024-11-04T03:05:22.159Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:05:22.159Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:05:22.160Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:05:22.161Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:05:22.161Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Failed to update prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:06:22.168Z"}
{"code":20,"codeName":"IllegalOperation","level":"error","message":"Error updating prices: Transaction numbers are only allowed on a replica set member or mongos","ok":0,"stack":"MongoServerError: Transaction numbers are only allowed on a replica set member or mongos\n    at Connection.onMessage (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:202:26)\n    at MessageStream.<anonymous> (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/connection.js:61:60)\n    at MessageStream.emit (node:events:507:28)\n    at processIncomingData (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:124:16)\n    at MessageStream._write (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/mongodb/lib/cmap/message_stream.js:33:9)\n    at writeOrBuffer (node:internal/streams/writable:570:12)\n    at _write (node:internal/streams/writable:499:10)\n    at Writable.write (node:internal/streams/writable:508:10)\n    at Socket.ondata (node:internal/streams/readable:1007:22)\n    at Socket.emit (node:events:507:28)","timestamp":"2024-11-04T03:06:22.170Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T03:07:39.227Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T03:07:39.254Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T03:07:39.258Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T03:07:39.259Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:07:39.259Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T03:07:39.260Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T03:07:39.331Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T03:07:39.331Z"}
{"level":"info","message":"Testing connection...","timestamp":"2024-11-04T03:07:39.333Z"}
{"blockHeight":325802154,"level":"info","message":"Connected to Solana network","timestamp":"2024-11-04T03:07:40.479Z"}
{"level":"info","message":"Requesting devnet SOL airdrop...","timestamp":"2024-11-04T03:07:40.479Z"}
{"level":"warn","message":"Airdrop failed, continuing anyway: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"bbf9ed6e-1883-4349-b990-8eac3d36be37\" } \r\n","stack":"Error: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"bbf9ed6e-1883-4349-b990-8eac3d36be37\" } \r\n\n    at ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5091:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-04T03:07:50.913Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-04T03:07:50.914Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-04T03:07:50.914Z"}
{"level":"info","message":"Drift client subscribed to updates","timestamp":"2024-11-04T03:07:53.144Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T03:08:36.882Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T03:08:36.905Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T03:08:36.912Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T03:08:36.913Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:08:36.913Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T03:08:36.913Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T03:08:36.989Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T03:08:36.989Z"}
{"level":"info","message":"Testing connection...","timestamp":"2024-11-04T03:08:36.990Z"}
{"blockHeight":325802307,"level":"info","message":"Connected to Solana network","timestamp":"2024-11-04T03:08:37.983Z"}
{"level":"info","message":"Requesting devnet SOL airdrop...","timestamp":"2024-11-04T03:08:37.984Z"}
{"level":"warn","message":"Airdrop failed, continuing anyway: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"f9e33610-49b3-4cef-a36e-fcad198b39ad\" } \r\n","stack":"Error: 429 Too Many Requests:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 429, \"message\":\"You've either reached your airdrop limit today or the airdrop faucet has run dry. Please visit https://faucet.solana.com for alternate sources of test SOL\"}, \"id\": \"f9e33610-49b3-4cef-a36e-fcad198b39ad\" } \r\n\n    at ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5091:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-04T03:08:48.653Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-04T03:08:48.653Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-04T03:08:48.653Z"}
{"level":"info","message":"Drift client subscribed to updates","timestamp":"2024-11-04T03:08:50.863Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T03:11:11.879Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T03:11:11.905Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T03:11:11.908Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T03:11:11.909Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:11:11.910Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T03:11:11.910Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T03:11:11.974Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T03:11:11.974Z"}
{"level":"info","message":"Testing Solana connection...","timestamp":"2024-11-04T03:11:11.976Z"}
{"cause":{"code":"ENOTFOUND","errno":-3008,"hostname":"solana-devnet.drift.trade","syscall":"getaddrinfo"},"level":"error","message":"Error during initialization: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-04T03:11:12.310Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T03:12:31.008Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T03:12:31.033Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T03:12:31.036Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T03:12:31.037Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:12:31.037Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T03:12:31.038Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T03:12:31.107Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T03:12:31.107Z"}
{"level":"info","message":"Testing Solana connection...","timestamp":"2024-11-04T03:12:31.111Z"}
{"cause":{"code":"ENOTFOUND","errno":-3008,"hostname":"drift-nightly-1.us-central.drift.trade","syscall":"getaddrinfo"},"level":"error","message":"Error during initialization: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-04T03:12:31.308Z"}
{"level":"info","message":"Connected to MongoDB successfully","timestamp":"2024-11-04T03:13:31.429Z"}
{"level":"info","message":"Created timestamp index for Trade","timestamp":"2024-11-04T03:13:31.454Z"}
{"level":"info","message":"Database indexes created successfully","timestamp":"2024-11-04T03:13:31.458Z"}
{"level":"info","message":"Connected to MongoDB","timestamp":"2024-11-04T03:13:31.461Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:13:31.462Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T03:13:31.462Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T03:13:31.528Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T03:13:31.528Z"}
{"level":"info","message":"Testing Solana connection...","timestamp":"2024-11-04T03:13:31.529Z"}
{"cause":{"code":"ENOTFOUND","errno":-3008,"hostname":"drift-nightly-1.us-central.drift.trade","syscall":"getaddrinfo"},"level":"error","message":"Error during initialization: fetch failed","stack":"TypeError: fetch failed\n    at node:internal/deps/undici/undici:13392:13\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5071:17)","timestamp":"2024-11-04T03:13:31.567Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:13:42.934Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:13:42.939Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:13:42.939Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:13:42.940Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:13:42.941Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:13:42.941Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:13:42.945Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:13:42.945Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:13:42.945Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:13:58.630Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:13:58.634Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:13:58.634Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:13:58.636Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:13:58.636Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:13:58.637Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:13:58.640Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:13:58.640Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:13:58.641Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:16:42.141Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:16:42.146Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:16:42.146Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:16:42.148Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:16:42.148Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:16:42.148Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:16:42.150Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:16:42.150Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:16:42.151Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:29:12.809Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:29:12.813Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:29:12.814Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:29:12.820Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:29:12.821Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:29:12.821Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:29:12.824Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:29:12.824Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:29:12.824Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:29:46.476Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:29:46.480Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:29:46.481Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:29:46.482Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:29:46.482Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:29:46.483Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:29:46.485Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:29:46.485Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:29:46.486Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:46:41.351Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:46:41.355Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:46:41.355Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:46:41.357Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:46:41.357Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:46:41.358Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:46:41.360Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:46:41.360Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:46:41.360Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:48:08.197Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:48:08.203Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:48:08.204Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:48:08.206Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:48:08.206Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:48:08.207Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:48:08.209Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:48:08.210Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:48:08.210Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:52:18.816Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:52:18.821Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:52:18.822Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:52:18.823Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:52:18.823Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:52:18.824Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:52:18.825Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:52:18.826Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:52:18.826Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:53:10.544Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:53:10.549Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:53:10.550Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:53:10.551Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:53:10.551Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:53:10.552Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:53:10.554Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:53:10.555Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:53:10.556Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:53:18.627Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:53:18.633Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:53:18.633Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:53:18.638Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:53:18.638Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:53:18.638Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:53:18.641Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:53:18.641Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:53:18.642Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:53:58.672Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:53:58.678Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:53:58.678Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:53:58.680Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:53:58.680Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:53:58.681Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:53:58.684Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:53:58.684Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:53:58.685Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T03:57:19.401Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T03:57:19.406Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T03:57:19.406Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T03:57:19.407Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T03:57:19.408Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T03:57:19.408Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T03:57:19.410Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T03:57:19.410Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T03:57:19.411Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:01:41.404Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:01:41.408Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:01:41.408Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:01:41.410Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:01:41.411Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:01:41.411Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:01:41.413Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T04:01:41.413Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:01:41.413Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:04:16.337Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:04:16.341Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:04:16.341Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:04:16.343Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:04:16.343Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:04:16.343Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:04:16.346Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T04:04:16.346Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:04:16.346Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:15:24.389Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:15:24.397Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:15:24.397Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:15:24.399Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:15:24.399Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:15:24.399Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:15:24.401Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T04:15:24.401Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:15:24.402Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:37:14.202Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:37:14.208Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:37:14.208Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:37:14.209Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:37:14.210Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:37:14.210Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:37:14.212Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T04:37:14.212Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:37:14.212Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:37:38.395Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:37:38.399Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:37:38.400Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:37:38.401Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:37:38.401Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:37:38.402Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:37:38.404Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T04:37:38.405Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:37:38.405Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.586Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.591Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.592Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.593Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.594Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.594Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:43:27.596Z"}
{"level":"info","message":"WebSocket server available at ws://localhost:3000","timestamp":"2024-11-04T04:43:27.596Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:43:27.597Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.586Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.592Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.592Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.594Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.594Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.594Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.596Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.586Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.593Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.593Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.595Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.595Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.595Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.598Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.586Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.594Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.594Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.596Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.596Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.596Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.599Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.588Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.608Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.609Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.611Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.612Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.612Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.615Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.588Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.621Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.621Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.623Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.624Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.625Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.628Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.588Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.607Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.607Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.609Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.609Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.609Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.612Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:43:27.589Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:43:27.634Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:43:27.635Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:43:27.637Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:43:27.637Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:43:27.638Z"}
{"address":"::","code":"EADDRINUSE","errno":-48,"level":"error","message":"Server error: listen EADDRINUSE: address already in use :::3000","port":3000,"stack":"Error: listen EADDRINUSE: address already in use :::3000\n    at Server.setupListenHandle [as _listen2] (node:net:1912:16)\n    at listenInCluster (node:net:1969:12)\n    at Server.listen (node:net:2074:7)\n    at Function.listen (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/express/lib/application.js:635:24)\n    at startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:171:24)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","syscall":"listen","timestamp":"2024-11-04T04:43:27.643Z"}
{"level":"info","message":"Health check request received","timestamp":"2024-11-04T04:45:08.354Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:55:34.884Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:55:34.893Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:55:34.893Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:55:34.895Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:55:34.896Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:55:34.896Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:55:34.900Z"}
{"level":"info","message":"WebSocket server will be available at ws://localhost:3000","timestamp":"2024-11-04T04:55:34.900Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:55:34.900Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T04:57:27.305Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T04:57:27.310Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T04:57:27.310Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T04:57:27.312Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T04:57:27.312Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T04:57:27.312Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T04:57:27.315Z"}
{"level":"info","message":"WebSocket server will be available at ws://localhost:3000","timestamp":"2024-11-04T04:57:27.315Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T04:57:27.315Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:01:13.404Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T05:01:13.410Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T05:01:13.522Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T05:01:13.522Z"}
{"level":"info","message":"Testing Solana connection...","timestamp":"2024-11-04T05:01:13.524Z"}
{"blockHeight":325820065,"level":"info","message":"Connected to Solana network","timestamp":"2024-11-04T05:01:14.119Z"}
{"level":"info","message":"Requesting devnet SOL airdrop...","timestamp":"2024-11-04T05:01:14.120Z"}
{"code":-32603,"level":"warn","message":"Airdrop failed, continuing anyway: airdrop to 5KKdkYx7g7XY6Pjp1fKktdHBaQQvTPBC5eRzKwnHDv3g failed: Internal error","name":"SolanaJSONRPCError","stack":"SolanaJSONRPCError: airdrop to 5KKdkYx7g7XY6Pjp1fKktdHBaQQvTPBC5eRzKwnHDv3g failed: Internal error\n    at Connection.requestAirdrop (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:7914:13)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async DriftService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/services/drift.js:91:50)\n    at async MarketService.initialize (/Users/rickrichman/Desktop/Trader_Agent/server/src/market.js:14:13)\n    at async startServer (/Users/rickrichman/Desktop/Trader_Agent/server/src/server.js:38:5)","timestamp":"2024-11-04T05:01:14.332Z"}
{"level":"info","message":"Initializing Drift SDK...","timestamp":"2024-11-04T05:01:14.333Z"}
{"level":"info","message":"Creating Drift client...","timestamp":"2024-11-04T05:01:14.333Z"}
{"level":"info","message":"Drift client subscribed to updates","timestamp":"2024-11-04T05:01:15.487Z"}
{"blockHeight":325820069,"level":"info","message":"Solana connection test passed","timestamp":"2024-11-04T05:01:15.558Z"}
{"level":"info","message":"Drift client test passed","subscribed":true,"timestamp":"2024-11-04T05:01:15.558Z"}
{"balance":"0 SOL","level":"info","message":"Wallet test passed","publicKey":"5KKdkYx7g7XY6Pjp1fKktdHBaQQvTPBC5eRzKwnHDv3g","timestamp":"2024-11-04T05:01:15.630Z"}
{"level":"info","message":"Drift service initialization complete","timestamp":"2024-11-04T05:01:15.630Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:01:15.630Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:01:15.631Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T05:01:15.631Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T05:01:15.633Z"}
{"level":"info","message":"WebSocket server will be available at ws://localhost:3000","timestamp":"2024-11-04T05:01:15.633Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T05:01:15.633Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:05:35.024Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:05:35.028Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:05:35.029Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:05:35.031Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:05:35.031Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T05:05:35.031Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T05:05:35.034Z"}
{"level":"info","message":"WebSocket server will be available at ws://localhost:3000","timestamp":"2024-11-04T05:05:35.034Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T05:05:35.035Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:06:03.349Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:06:03.354Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:06:03.354Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:06:03.356Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:06:03.357Z"}
{"level":"info","message":"Strategy manager initialized","timestamp":"2024-11-04T05:06:03.357Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2024-11-04T05:06:03.360Z"}
{"level":"info","message":"WebSocket server will be available at ws://localhost:3000","timestamp":"2024-11-04T05:06:03.361Z"}
{"level":"info","message":"REST API available at http://localhost:3000/api","timestamp":"2024-11-04T05:06:03.361Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:11:34.143Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:11:34.149Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:11:34.149Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:11:34.151Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:11:34.152Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:11:34.152Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:11:34.156Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:11:34.157Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:11:56.636Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:11:56.640Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:11:56.640Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:11:56.642Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:11:56.642Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:11:56.642Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:11:56.645Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:11:56.645Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:17:46.775Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:17:46.781Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:17:46.781Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:17:46.783Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:17:46.784Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:17:46.784Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:17:46.788Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:17:46.788Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:18:01.842Z"}
{"level":"info","message":"Loading wallet keypair...","timestamp":"2024-11-04T05:18:01.846Z"}
{"level":"info","message":"Wallet loaded successfully","timestamp":"2024-11-04T05:18:01.915Z"}
{"level":"info","message":"Connecting to Solana network...","timestamp":"2024-11-04T05:18:01.915Z"}
{"level":"info","message":"Testing Solana connection...","timestamp":"2024-11-04T05:18:01.917Z"}
{"level":"error","message":"Error during initialization: 403 Forbidden:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 403, \"message\":\"Access forbidden\"}, \"id\": \"928e1879-41d0-407b-81d3-e183396153dc\" } \r\n","stack":"Error: 403 Forbidden:  {\"jsonrpc\":\"2.0\",\"error\":{\"code\": 403, \"message\":\"Access forbidden\"}, \"id\": \"928e1879-41d0-407b-81d3-e183396153dc\" } \r\n\n    at ClientBrowser.callServer (/Users/rickrichman/Desktop/Trader_Agent/server/node_modules/@solana/web3.js/lib/index.cjs.js:5091:18)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)","timestamp":"2024-11-04T05:18:02.301Z"}
{"level":"info","message":"Falling back to simulated mode","timestamp":"2024-11-04T05:18:02.303Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:18:02.303Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:18:02.304Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:18:02.304Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:18:02.304Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:18:02.307Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:18:02.308Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:19:02.420Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:19:02.425Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:19:02.426Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:19:02.427Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:19:02.427Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:19:02.427Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:19:02.430Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:19:02.430Z"}
{"level":"info","message":"Initializing Drift service...","timestamp":"2024-11-04T05:29:58.490Z"}
{"level":"info","message":"Using simulated mode","timestamp":"2024-11-04T05:29:58.494Z"}
{"level":"info","message":"Initializing simulated environment","timestamp":"2024-11-04T05:29:58.494Z"}
{"level":"info","message":"Market service initialized with Drift Protocol","timestamp":"2024-11-04T05:29:58.497Z"}
{"level":"info","message":"Market service initialized","timestamp":"2024-11-04T05:29:58.497Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:29:58.497Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:29:58.499Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:29:58.500Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:30:58.630Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:30:58.641Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:30:58.643Z"}
{"level":"info","message":"Starting server...","timestamp":"2024-11-04T05:31:27.738Z"}
{"level":"info","message":"WebSocket server created","timestamp":"2024-11-04T05:31:27.770Z"}
{"level":"info","message":"HTTP server running on port 3000","timestamp":"2024-11-04T05:31:27.775Z"}
